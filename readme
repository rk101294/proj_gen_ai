# üì∞ NewsBot: News Research Tool with Gemini + Streamlit

NewsBot is a GenAI-powered web application that enables users to extract and analyze news articles using Google's Gemini API, LangChain, and Streamlit. The app supports URL-based document loading, intelligent embeddings with FAISS, and smart Q&A retrieval with source citations.

## üöÄ Features

- üîó Enter up to **3 news article URLs**
- üìÑ Automatically **extracts, splits, and indexes** content
- üí¨ Ask **natural language questions** about the articles
- üß† Powered by **Gemini 2.0 Flash** for contextual answers
- üìö Displays **source citations** for answers
- ‚öôÔ∏è Uses **LangChain**, **FAISS**, and **Google Generative AI**

#####################################################
############# Project Structure #####################
#####################################################

gen_ai_proj/
‚îÇ
‚îú‚îÄ‚îÄ app.py # Main Streamlit application
‚îú‚îÄ‚îÄ Dockerfile # Dockerfile for GCP deployment
‚îú‚îÄ‚îÄ cloudbuild.yaml # Cloud Build configuration for GCP
‚îú‚îÄ‚îÄ requirements.txt # Python dependencies
‚îú‚îÄ‚îÄ .env # Environment variables (not pushed to GitHub)
‚îî‚îÄ‚îÄ README.md # Project documentation

#####################################################
########### Setup in Local Machine and github  ######
#####################################################

## üßë‚Äçüíª Create repository: Create a new repo on GitHub
  Go to: https://github.com/rk101294?tab=repositories --> Click New (green button) to create a new repository --> Give your repo a name, e.g., proj_gen_ai
  (Optional) Add a description --> Choose Public or Private as you want --> Do NOT initialize with README (since you have one locally)

## üßë‚Äçüíª Local Setup
1. Create and Activate Virtual Environment
  python -m venv venv
  # Activate on Windows
  .\venv\Scripts\activate
  # Activate on Mac/Linux
  source venv/bin/activate

2. Install Dependencies
  pip install -r requirements.txt

3. Set Up Environment Variables
  GOOGLE_API_KEY=your-google-gemini-api-key

4. Run the Streamlit App Locally
  streamlit run app.py

5. In VS Code, do
  ```bash
  git init
  git add .
  git commit -m "Initial commit - add Streamlit Gen AI project files"
  git remote add origin https://github.com/rk101294/proj_gen_ai.git
  git branch -M main
  git push -u origin main

OR
if your code is already on GitHub, to do a local setup follow:-
 Clone the Repository
```bash
git clone https://github.com/rk101294/proj_gen_ai.git
cd gen_ai_proj

#####################################################
########### Deployment on Google Cloud Run ##########
#####################################################

‚òÅÔ∏è Deployment on Google Cloud Run (via Cloud Build)
‚úÖ Prerequisites
Python 3.10+
Google Cloud SDK installed and authenticated: gcloud auth login
Enable required services: gcloud services enable run.googleapis.com cloudbuild.googleapis.com artifactregistry.googleapis.com

üîÅ Deployment Steps
1. Confirm Dockerfile Configuration
Ensure your Dockerfile contains:

FROM python:3.10-slim
WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
COPY . .
EXPOSE 8080
CMD streamlit run app.py --server.port=$PORT --server.address=0.0.0.0

2. Build and Push Docker Image to GCP
gcloud builds submit --config cloudbuild.yaml --project=gen-ai-proj-460914 .

3. Deploy to Cloud Run
gcloud run deploy NewsBot-streamlit \
  --image gcr.io/gen-ai-proj-460914/NewsBot-streamlit \
  --platform managed \
  --region us-central1 \
  --allow-unauthenticated \
  --project=gen-ai-proj-460914 \
  --update-env-vars GOOGLE_API_KEY="your-google-gemini-api-key"





